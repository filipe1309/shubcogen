#!/bin/bash

# DOTR

VERSION=$(head -n 1 .shub/bin/version)

# Update Tag Version (with semantic versioning) on post-push

NEWEST_TAG=$(git describe --abbrev=0 --tags)

echo $NEWEST_TAG
echo $VERSION
echo "version $VERSION"

if [ x$NEWEST_TAG != x$VERSION ]; then
    echo "NEW VERSION TAG ADDED: $VERSION"
    git tag -a $VERSION -m "Version $VERSION"
fi

# Auto incremeent Tag Version (with semantic versioning) on pre-push

major=`echo $VERSION | cut -d. -f1`
minor=`echo $VERSION | cut -d. -f2`
revision=`echo $VERSION | cut -d. -f3`

echo "---------------------------------------------"
echo "Current version: $VERSION"
echo "---------------------------------------------"
echo ""

echo 'Which type of update:'

exec < /dev/tty # to work with git hooks
select type in major minor revision
do
        case $type in 
        major|minor|revision)   
                break
                ;;
        *)
                echo "Invalid area" 
                ;;
        esac
done

if [ $type == "major" ]; then
    major=`expr $major + 1`
    minor=0
    revision=0
elif [ $type == "minor" ]; then
    minor=`expr $minor + 1`
    revision=0
elif  [ $type == "revision" ]; then
    revision=`expr $revision + 1`
else
    echo "No version"
    exit 1
fi

echo "---------------------------------------------"

echo "$type"
NEW_VERSION="$major.$minor.$revision"
echo $NEW_VERSION

echo "---------------------------------------------"

confirm() {
    read -r -p "${1:-Are you sure? [Y/n]} " response
    response=${response,,} # tolower
    if [[ $response =~ ^(yes|y| ) ]] || [[ -z $response ]]; then
        echo "Ok"
    else
        exit 0;
    fi
}

read -r -p "Update version ($type) from $VERSION to $NEW_VERSION? [Y/n]" response
response=${response,,} # tolower
if [[ $response =~ ^(yes|y| ) ]] || [[ -z $response ]]; then
    echo "Updating..."
    sed -i "s/$VERSION/$NEW_VERSION/g" .shub/bin/version
    git add .shub/bin/version
    
    echo -e "\xE2\x9C\x94 Done"
fi
